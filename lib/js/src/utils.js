// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE
'use strict';

var $$Array    = require("bs-platform/lib/js/array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Js_boolean = require("bs-platform/lib/js/js_boolean.js");

function hasLeadingSlash(path) {
  return Js_boolean.to_js_boolean(+path.startsWith("/"));
}

function ensureLeadingSlash(path) {
  var match = +hasLeadingSlash(path);
  if (match !== 0) {
    return path;
  } else {
    return "/" + path;
  }
}

function hasTrailingSlash(path) {
  return Js_boolean.to_js_boolean(+path.endsWith("/"));
}

function ensureTrailingSlash(path) {
  var match = +hasTrailingSlash(path);
  if (match !== 0) {
    return path;
  } else {
    return path + "/";
  }
}

function pathFromHash(url) {
  var match = $$Array.to_list(url.split("#"));
  var path;
  if (match) {
    var match$1 = match[1];
    path = match$1 && !match$1[1] ? match$1[0] : "/";
  } else {
    path = "/";
  }
  return ensureLeadingSlash(ensureTrailingSlash(path));
}

function noop() {
  return 1;
}

function trimQueryParams(path) {
  return Caml_array.caml_array_get(path.split("?"), 0);
}

exports.hasLeadingSlash     = hasLeadingSlash;
exports.ensureLeadingSlash  = ensureLeadingSlash;
exports.hasTrailingSlash    = hasTrailingSlash;
exports.ensureTrailingSlash = ensureTrailingSlash;
exports.pathFromHash        = pathFromHash;
exports.noop                = noop;
exports.trimQueryParams     = trimQueryParams;
/* No side effect */
